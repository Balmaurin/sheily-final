# Pre-commit hooks configuration
# ==============================
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

# Use the system's Python 3.12 for all Python hooks (Windows-friendly)
default_language_version:
  python: python3.12

repos:
  # Black - Code formatter
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        args: ['--line-length=120']
        exclude: '^(venv/|\.venv/|build/|dist/)'

  # isort - Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=120']
        exclude: '^(venv/|\.venv/|build/|dist/)'

  # Flake8 - Linting
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--ignore=E203,W503,E501']
        exclude: '^(venv/|\.venv/|build/|dist/)'

  # Trailing whitespace
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.(md|txt)$'
      - id: end-of-file-fixer
        exclude: '\.(md|txt)$'
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=5000']
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending
      - id: check-case-conflict

  # Bandit - Security linting
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml', '-r', 'sheily_core/', 'sheily_train/']
        additional_dependencies: ['bandit[toml]']
        exclude: '^(tests/|venv/|\.venv/)'

  # MyPy - Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--no-strict-optional']
        additional_dependencies: ['types-requests', 'types-PyYAML']
        exclude: '^(tests/|venv/|\.venv/)'

  # Docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        args: ['-vv', '--fail-under=60', 'sheily_core/', 'sheily_train/']
        additional_dependencies: ['setuptools']
        exclude: '^(tests/|venv/|\.venv/)'

  # Security - detect secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '^(\.env\.example|tests/)'

# Local hooks
  - repo: local
    hooks:
      # Custom security check
      - id: check-shell-true
        name: Check for shell=True usage
        entry: python tools/precommit/check_shell_true.py
        language: system
        pass_filenames: false
        always_run: true

      - id: check-bare-except
        name: Check for bare except statements
        entry: python tools/precommit/check_bare_except.py
        language: system
        pass_filenames: false
        always_run: true

      - id: check-print-statements
        name: Check for print() in core modules
        entry: python tools/precommit/check_print_core.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

      # Run pytest on changed Python files
      - id: pytest-check
        name: pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: false
        args: ['tests/', '-x', '--tb=short']
        stages: [pre-push]
