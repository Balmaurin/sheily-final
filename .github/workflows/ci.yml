name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Ejecutar tests de seguridad diariamente a las 2 AM
    - cron: '0 2 * * *'

jobs:
  # Job 1: Linting y formato
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install linting dependencies
        run: |
          pip install black flake8 pylint mypy isort ruff interrogate

      - name: Run Black (format check)
        run: black --check sheily_core/ sheily_train/ --line-length 120

      - name: Run Flake8
        run: flake8 sheily_core/ sheily_train/ --max-line-length=120 --ignore=E203,W503

      - name: Run isort (import sorting)
        run: isort --check-only sheily_core/ sheily_train/

      - name: Run Pylint
        run: pylint sheily_core/ sheily_train/ --fail-under=7.0 || true

      - name: Run Ruff (fast linter)
        run: ruff sheily_core/ sheily_train/

      - name: Run MyPy (type checking)
        run: mypy sheily_core/ sheily_train/ --ignore-missing-imports

      - name: Check docstring coverage (interrogate)
        run: interrogate -vv --fail-under=60 sheily_core/ sheily_train/

  # Job 2: Tests Unitarios
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio pytest-mock

      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=sheily_core --cov=sheily_train \
            --cov-report=xml --cov-report=html --cov-report=term \
            --cov-fail-under=70 -v --tb=short

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.python-version }}

      - name: Archive coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov/

  # Job 3: Análisis de Seguridad
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install security tools
        run: |
          pip install bandit safety pip-audit

      - name: Run Bandit (SAST)
        run: |
          bandit -r sheily_core/ sheily_train/ \
            -f json -o bandit-report.json || true
          bandit -r sheily_core/ sheily_train/ \
            -f txt || true

      - name: Run Safety (dependency check)
        run: |
          safety check --file requirements.txt --json || true

      - name: Run pip-audit
        run: |
          pip-audit -r requirements.txt || true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: bandit-report.json

  # Job 4: Tests de Integración
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: sheily_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:test_password@localhost:5432/sheily_test
          REDIS_URL: redis://localhost:6379
        run: |
          pytest tests/ -v -m integration || true

  # Job 5: Build Docker Image
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [lint, test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: sheily-ai:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm sheily-ai:latest python --version

  # Job 6: Code Quality Report
  quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Para análisis completo

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

  # Job 7: Dependency Review
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
